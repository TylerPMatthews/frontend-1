[{"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\index.js":"1","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\App.js":"2","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\Login.js":"3","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\Register.js":"4","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Util\\PrivateRoute.js":"5","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Util\\axiosWithAuth.js":"6","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\CreatePlant.js":"7","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\PlantCard.js":"8","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\EditPlant.js":"9","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\PlantList.js":"10","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Util\\Private.js":"11"},{"size":271,"mtime":1612408142460,"results":"12","hashOfConfig":"13"},{"size":1722,"mtime":1612556015250,"results":"14","hashOfConfig":"13"},{"size":4496,"mtime":1612555868317,"results":"15","hashOfConfig":"13"},{"size":5111,"mtime":1612555803790,"results":"16","hashOfConfig":"13"},{"size":468,"mtime":1612398333751,"results":"17","hashOfConfig":"13"},{"size":313,"mtime":1612555726547,"results":"18","hashOfConfig":"13"},{"size":3504,"mtime":1612555978520,"results":"19","hashOfConfig":"13"},{"size":1845,"mtime":1612555836588,"results":"20","hashOfConfig":"13"},{"size":4490,"mtime":1612555922635,"results":"21","hashOfConfig":"13"},{"size":530,"mtime":1612555822580,"results":"22","hashOfConfig":"13"},{"size":170,"mtime":1612555726539,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1nbm2zw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\index.js",[],["49","50"],"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\App.js",[],"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\Login.js",[],"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\Register.js",[],"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Util\\PrivateRoute.js",[],"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Util\\axiosWithAuth.js",[],"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\CreatePlant.js",["51","52","53"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport styled from \"styled-components\";\r\nimport axiosWithAuth from \"../Util/axiosWithAuth\";\r\n\r\nconst schema = yup.object().shape({\r\n  user_id: yup\r\n    .string()\r\n    .required(\"An Id is required\")\r\n    .min(1, \"This Id needs to be at least 1 character long\"),\r\n  nickName: yup\r\n    .string()\r\n    .required(\"A Nickname is required\")\r\n    .min(2, \"This nickname needs to be at least 2 chars long\"),\r\n  species: yup\r\n    .string()\r\n    .required(\"A species is required\")\r\n    .min(4, \"This species needs to be at least 4 chars long\"),\r\n  h2oFrequency: yup\r\n    .string()\r\n    .required(\"An H2o-Frequency is required\")\r\n    .min(1, \"This h2oFrequency needs to be at least 1 chars long\"),\r\n});\r\n\r\nconst initialFormErrors = {\r\n  user_id: \"\",\r\n  nickname: \"\",\r\n  species: \"\",\r\n  h2o_frequency: \"\",\r\n  image_url: \"\",\r\n};\r\n\r\n// Component to create plant\r\nconst CreatePlant = (props) => {\r\n\r\n    const initialFormValues = {\r\n      user_id: 8,\r\n      nickname: \"\",\r\n      species: \"\",\r\n      h2o_frequency: \"\",\r\n      image_url: \"\",\r\n    };\r\n    // console.log(\"Create plant props\", props.plants)\r\n\r\n\r\n  const [value, setValue] = useState(initialFormValues);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [errors, setErrors] = useState(initialFormErrors);\r\n\r\n\r\n  useEffect(() => {\r\n    schema.isValid(value).then((valid) => setDisabled(!valid));\r\n  }, [value]);\r\n\r\n  const onChange = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n\r\n      const postPlant = (e) => {\r\n          e.preventDefault();\r\n          axiosWithAuth()\r\n          .post('https://water-my-plants-four.herokuapp.com/plants', value)\r\n          .then(res=>{\r\n            console.log(res.data)\r\n          props.setPlants(value)\r\n          console.log(props.plants)\r\n          })\r\n          \r\n          .catch(err=>{\r\n              console.log('Create plant error', err.response)\r\n              console.log(value)\r\n          })\r\n      }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <StyledForm onSubmit={postPlant}>\r\n        {/* Still need the onSubmit here. */}\r\n        <label>\r\n          Nickname:\r\n          <input\r\n            name=\"nickname\"\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            value={value.nickname}\r\n            placeholder=\"Nickname\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Species:\r\n          <input\r\n            name=\"species\"\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            value={value.species}\r\n            placeholder=\"Species\"\r\n          />\r\n        </label>\r\n        <label>\r\n          H2O:\r\n          <input\r\n            name=\"h2o_frequency\"\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            value={value.h2o_frequency}\r\n            placeholder=\"H2o-Frequency\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Image:\r\n          <input\r\n            name=\"image_url\"\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            value={value.image_url}\r\n            placeholder=\"Image: optional\"\r\n          />\r\n        </label>\r\n        <button disabled={disabled} className=\"submit-btn\" />\r\n        <button>\r\n          Add Plant\r\n        </button>\r\n        <div>{errors.nickName}</div>\r\n        <div>{errors.species}</div>\r\n        <div>{errors.h2oFrequency}</div>\r\n        <div>{errors.id}</div>\r\n      </StyledForm>\r\n    </div>\r\n  );\r\n};\r\nexport default CreatePlant;\r\n\r\nconst StyledForm = styled.form``;\r\n","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\PlantCard.js",[],"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\EditPlant.js",[],"C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Components\\PlantList.js",["54"],"import Card from \"./PlantCard.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlantCard from './PlantCard';\r\nfunction Cardlist(props) {\r\n// Passing plants and setPlants through props\r\nconsole.log(props.plants);\r\n  const { push } = useHistory();\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => push(\"/createplant\")}>Create Plant</button>\r\n      </div>\r\n      <div>\r\n        <h1>Water My Plants</h1>\r\n        {props.plants.map((elem) => {\r\n          return <PlantCard key={elem.id} plant={elem} setPlants={props.setPlants} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cardlist\r\n","C:\\Users\\Chance\\Desktop\\SCHOOL\\Lambda-Assignments\\Build week\\frontend\\watermyplants\\src\\Util\\Private.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":2,"column":16,"nodeType":"61","messageId":"62","endLine":2,"endColumn":26},{"ruleId":"59","severity":1,"message":"64","line":49,"column":18,"nodeType":"61","messageId":"62","endLine":49,"endColumn":27},{"ruleId":"59","severity":1,"message":"65","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'setErrors' is assigned a value but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]