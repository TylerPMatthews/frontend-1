[{"C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\index.js":"1","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\App.js":"2","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Util\\PrivateRoute.js":"3","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\Login.js":"4","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\Home.js":"5","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\Register.js":"6","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\Card.js":"7","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\CreatePlant.js":"8","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\EditPlant.js":"9","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\CardList.js":"10","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Util\\axiosWithAuth.js":"11"},{"size":250,"mtime":1612375762198,"results":"12","hashOfConfig":"13"},{"size":1221,"mtime":1612462508403,"results":"14","hashOfConfig":"13"},{"size":468,"mtime":1612375762197,"results":"15","hashOfConfig":"13"},{"size":3727,"mtime":1612462508406,"results":"16","hashOfConfig":"13"},{"size":1011,"mtime":1612512023520,"results":"17","hashOfConfig":"13"},{"size":4073,"mtime":1612462508407,"results":"18","hashOfConfig":"13"},{"size":4817,"mtime":1612512532439,"results":"19","hashOfConfig":"13"},{"size":4523,"mtime":1612544379795,"results":"20","hashOfConfig":"13"},{"size":2866,"mtime":1612462508405,"results":"21","hashOfConfig":"13"},{"size":1190,"mtime":1612476995810,"results":"22","hashOfConfig":"13"},{"size":269,"mtime":1612375762198,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"dv45rc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\index.js",[],["50","51"],"C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\App.js",[],"C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Util\\PrivateRoute.js",[],"C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\Login.js",[],"C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\Home.js",["52","53"],"import React, { useEffect, useState } from \"react\";\r\nimport Cardlist from \"./CardList\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Home = () => { \r\n  return (\r\n    <StyledHome>\r\n    <div>\r\n      <h1>Water My Plants</h1>\r\n      <Cardlist />\r\n    </div>\r\n    </StyledHome>\r\n  );\r\n};\r\nexport default Home;\r\n\r\nconst StyledHome = styled.div`\r\n\r\n@media(max-width: 1920px){\r\n\r\nbackground-color: rgb(228, 253, 225);\r\n\r\nh1{\r\n color: darkcyan;\r\n}\r\n\r\n& .create-btn{\r\n     padding: 1% 2.5% ;\r\n     text-align:center;\r\n     font-family: arial;\r\n     color: white;\r\n     background-color: \trgb(136, 221, 136);\r\n     font-size: 1.5rem;\r\n     opacity: 0.9;\r\n}\r\n\r\n}\r\n\r\n@media(max-width: 1000px){\r\n\r\n   background-color: rgb(228, 253, 225);\r\n\r\n  h1{\r\n    color: darkcyan;\r\n  }\r\n\r\n   & .create-btn{\r\n        padding: 1.5% 3.5% ;\r\n        text-align:center;\r\n        font-family: arial;\r\n        color: white;\r\n        background-color: \trgb(136, 221, 136);\r\n        font-size: 1.5rem;\r\n        opacity: 0.9;\r\n   }\r\n\r\n  }\r\n`","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\Register.js",[],"C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\Card.js",["54","55","56","57"],"import React from 'react';\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n// import * as font from \"./fonts\"\r\nimport axiosWithAuth from '../Util/axiosWithAuth'\r\nimport EditPlant from './EditPlant';\r\n\r\n// Delete axios request here\r\n\r\nconst PlantCard = props => {\r\n    const {push} = useHistory()\r\n\r\n  \r\n    const deletePlant = (plant) => {\r\n        axiosWithAuth()\r\n        .delete(`https://water-my-plants-four.herokuapp.com/plants/${props.id}`)\r\n        .then(res => {\r\n            console.log(res)\r\n            props.setPlants(res.data)\r\n            push('/home')\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(plant)\r\n            console.log(\"delete function error\", err.response)\r\n        })\r\n    };\r\n    const editPlant = () => {\r\n        <EditPlant plants={props.plants}/>\r\n        push(`/editplant:${props.id}`)\r\n    }\r\n  \r\n    return (\r\n\r\n        <StyledCard className='styled'>\r\n        <div className='card-container'>\r\n            <div className='card'>\r\n                <div className='img-container'>\r\n                    <img className='img' alt='A plant' src={props.plant.image_url} />\r\n                </div>\r\n                <div className='p-tag'>\r\n                    <p>Nickname: {props.plant.nickname}</p>\r\n                    <p>Species: {props.plant.species}</p>\r\n                    <p>H2o Frequency: {props.plant.h2o_frequency}</p>\r\n                    <button className='btn'>Edit</button>\r\n                    <button className='btn'>Delete</button>\r\n                </div>\r\n                \r\n                {/* An edit button that allows one to update the plant object. */}\r\n                \r\n                {/* The delete button should delete the given card. */}\r\n            </div>\r\n        </div>\r\n    </StyledCard>\r\n    );\r\n}\r\n\r\nexport default PlantCard\r\n\r\nconst StyledCard = styled.div`\r\n\r\n@media(max-width: 1920px){\r\n    \r\n    margin: 0% auto;\r\n        background-color: rgb(228, 253, 225);\r\n        padding: 2.5%;\r\n        display:flex;\r\n        justify-content: center;\r\n\r\n  & .btn{\r\nmargin: 2% 2%;\r\npadding: 1.5% 4.5% ;\r\ntext-align:center;\r\nfont-family: arial;\r\ncolor: white;\r\nbackground-color: \trgb(38, 38, 38);\r\n\r\n}\r\n\r\n& .img-container{\r\n\r\njustify-content: center;\r\nwidth: 100%;\r\nheight: 100%;\r\n\r\n}\r\n\r\n& .card-container{\r\n\r\ndisplay:flex;\r\nwidth:60%;\r\nmargin: 0;\r\njustify-content: center;\r\nborder: 7.5px groove darkcyan;\r\nbackground-color: rgb(147, 184, 173);\r\nbox-shadow: 10px 5px 5px darkgrey;\r\n\r\n}\r\n\r\n& .card{\r\n\r\ndisplay:flex;\r\nwidth: 100%;\r\n\r\n}\r\n\r\n& .img{\r\n\r\nwidth: 520px;\r\nheight: 200px;\r\nbackground-position: 50% 50%;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\nobject-fit:cover;\r\nobject-position:center;\r\n\r\n\r\n}\r\n\r\n& .p-tag{\r\n\r\ndisplay:flex;\r\nwidth:100%;\r\nheight:40%;\r\n/* border: 2.5px solid red; */\r\njustify-content:center;\r\nmargin: 0 auto;\r\nflex-wrap: wrap;\r\n}\r\n\r\np{\r\n\r\ndisplay:flex;\r\njustify-content:center;\r\nflex-wrap:wrap;\r\nflex-direction:row;\r\nwidth:100%;\r\nmargin: 2%;\r\nheight: 30%;\r\nfont-size: 1.2em;\r\nfont-family: arial;\r\ncolor: antiquewhite;\r\nfont-weight: unset;\r\n/* border: 2.5px solid red; */\r\n\r\n}\r\n\r\n}\r\n\r\n@media(max-width: 1000px){\r\n\r\n        margin: 0% auto;\r\n        background-color: rgb(228, 253, 225);\r\n        padding: 2.5%;\r\n        display:flex;\r\n        justify-content: center;\r\n\r\n    & .btn{\r\n\r\n        margin: 2% 2%;\r\n        padding: 1.5% 4.5% ;\r\n        text-align:center;\r\n        font-family: arial;\r\n        color: white;\r\n        background-color: \trgb(38, 38, 38);\r\n        \r\n    }\r\n\r\n    & .img-container{\r\n\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: 100%;\r\n        \r\n    }\r\n\r\n    & .card-container{\r\n\r\n        display:flex;\r\n        width:60%;\r\n        margin: 0;\r\n        justify-content: center;\r\n        border: 7.5px groove darkcyan;\r\n        background-color: rgb(147, 184, 173);\r\n        box-shadow: 10px 5px 5px darkgrey;\r\n\r\n    }\r\n\r\n    & .card{\r\n\r\n        display:flex;\r\n        width: 100%;\r\n\r\n    }\r\n\r\n    & .img{\r\n\r\n    width: 250px;\r\n    height: 200px;\r\n    background-position: 50% 50%;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    object-fit:cover;\r\n    object-position:center;\r\n\r\n        \r\n    }\r\n\r\n    & .p-tag{\r\n\r\n        display:flex;\r\n        width:100%;\r\n        height:40%;\r\n        /* border: 2.5px solid red; */\r\n        justify-content:center;\r\n        margin: 0 auto;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    p{\r\n\r\n        display:flex;\r\n        justify-content:center;\r\n        flex-wrap:wrap;\r\n        flex-direction:row;\r\n        width:100%;\r\n        margin: 5%;\r\n        height: 30%;\r\n        font-size: 1.2em;\r\n        font-family: arial;\r\n        color: antiquewhite;\r\n        font-weight: unset;\r\n        /* border: 2.5px solid red; */\r\n\r\n    }\r\n}\r\n`","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\CreatePlant.js",["58","59","60","61"],"C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\EditPlant.js",["62"],"import React, { useEffect , useState} from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport axiosWithAuth from '../Util/axiosWithAuth';\r\n\r\n// To edit plant, prop drill formValue state from Card.js\r\n// Change that state on the handleChange function\r\n// Submit that Changed state as an axios(withAuth) put request\r\n// Prop drill changed Plant state to update Plant list\r\n// Push back to Home Component\r\nconst initialItem = {\r\n    id:'',\r\n    user_id:'',\r\n    nickname:'',\r\n    species:'',\r\n    h2o_frequency:'',\r\n    image_url:'',\r\n    isWatered:'',\r\n\r\n\r\n\r\n}\r\n\r\nconst EditPlant = (props) => {\r\n    const {id} = useParams();\r\n    const {push} = useHistory();\r\n    const [item,setItem] = useState(initialItem)\r\n    useEffect(()=>{\r\n        axiosWithAuth()\r\n        .get(`https://water-my-plants-four.herokuapp.com/plants/${id}`)\r\n        .then(res=>{\r\n            console.log(res)\r\n        })\r\n        .catch(err=>{\r\n            console.log('Grab item error', err.response)\r\n        })\r\n    },[id])\r\n    \r\n\r\n    const handleChange = e => {\r\n        setItem({\r\n            ...item,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        axiosWithAuth()\r\n        .put(`https://water-my-plants-four.herokuapp.com/plants/${id}`, item)\r\n        .then(res=>{\r\n            console.log(res)\r\n        })\r\n        .catch(err=>{\r\n            console.log('edit error', err.response)\r\n        })\r\n\r\n    }\r\n    return(\r\n        <div>\r\n          <form onSubmit={handleSubmit}>\r\n              <label>\r\n                  Nickname:\r\n             <input \r\n             type='text'\r\n             name='nickname'\r\n             value={item.nickname}\r\n             onChange={handleChange} \r\n             />\r\n             </label>\r\n             <label>species:\r\n               <input \r\n             type='text'\r\n             name='species'\r\n             value={item.species}\r\n             onChange={handleChange} \r\n             />\r\n             </label>\r\n             <label>\r\n                 H2o\r\n             <input \r\n             type='text'\r\n             name='h2o_frequency'\r\n             value={item.h2o_frequency}\r\n             onChange={handleChange} \r\n             />\r\n             </label>\r\n             <label>image url\r\n               <input \r\n             type='text'\r\n             name='image_url'\r\n             value={item.image_url}\r\n             onChange={handleChange} \r\n             />\r\n             </label>\r\n             <label>is watered\r\n                  <input \r\n             type='text'\r\n             name='isWatered'\r\n             value={item.isWatered}\r\n             onChange={handleChange} \r\n             />\r\n             </label>\r\n             <button>Edit Plant</button>\r\n\r\n         </form> \r\n        \r\n        </div>\r\n    )\r\n}\r\nexport default EditPlant;","C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Components\\CardList.js",[],"C:\\Users\\black\\Documents\\CODE\\Lambda Code\\Lambda Unit 2\\Work\\frontend\\watermyplants\\src\\Util\\axiosWithAuth.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"71","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"72","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":25},{"ruleId":"67","severity":1,"message":"74","line":14,"column":11,"nodeType":"69","messageId":"70","endLine":14,"endColumn":22},{"ruleId":"67","severity":1,"message":"75","line":28,"column":11,"nodeType":"69","messageId":"70","endLine":28,"endColumn":20},{"ruleId":"67","severity":1,"message":"72","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"76","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":26},{"ruleId":"67","severity":1,"message":"77","line":45,"column":10,"nodeType":"69","messageId":"70","endLine":45,"endColumn":18},{"ruleId":"67","severity":1,"message":"78","line":46,"column":18,"nodeType":"69","messageId":"70","endLine":46,"endColumn":27},{"ruleId":"67","severity":1,"message":"79","line":25,"column":12,"nodeType":"69","messageId":"70","endLine":25,"endColumn":16},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'deletePlant' is assigned a value but never used.","'editPlant' is assigned a value but never used.","'useHistory' is defined but never used.","'disabled' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'push' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]