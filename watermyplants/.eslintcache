[{"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/index.js":"1","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/App.js":"2","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Util/PrivateRoute.js":"3","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/Home.js":"4","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/Register.js":"5","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/Login.js":"6","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Util/axiosWithAuth.js":"7","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/CardList.js":"8","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/Card.js":"9","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/CreatePlant.js":"10"},{"size":243,"mtime":1612365128011,"results":"11","hashOfConfig":"12"},{"size":775,"mtime":1612397982109,"results":"13","hashOfConfig":"12"},{"size":450,"mtime":1612365128011,"results":"14","hashOfConfig":"12"},{"size":272,"mtime":1612395948755,"results":"15","hashOfConfig":"12"},{"size":3916,"mtime":1612395567108,"results":"16","hashOfConfig":"12"},{"size":3582,"mtime":1612394924972,"results":"17","hashOfConfig":"12"},{"size":256,"mtime":1612365128011,"results":"18","hashOfConfig":"12"},{"size":822,"mtime":1612396024400,"results":"19","hashOfConfig":"12"},{"size":1474,"mtime":1612398145349,"results":"20","hashOfConfig":"12"},{"size":3898,"mtime":1612397953270,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1phitu3",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/index.js",[],"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/App.js",[],"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Util/PrivateRoute.js",[],["45","46"],"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/Home.js",["47","48","49"],"import React, { useEffect, useState } from \"react\";\nimport axiosWithAuth from \"../Util/axiosWithAuth\";\nimport Cardlist from \"./CardList\";\n\nconst Home = () => { \n  return (\n    <div>\n      <h2>Water My Plants</h2>\n      <Cardlist />\n    </div>\n  );\n};\nexport default Home;\n","/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/Register.js",[],"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/Login.js",[],"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Util/axiosWithAuth.js",[],"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/CardList.js",[],"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/Card.js",["50","51"],"/Users/loustevens/Desktop/Lambda/Sprint3-Adavnced-React/BuildWeek/frontend/watermyplants/src/Components/CreatePlant.js",["52","53","54","55"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from 'yup';\nimport styled from \"styled-components\";\nimport axios from 'axios';\nimport Cardlist from \"./CardList\";\n\nconst schema = yup.object().shape({\n    id: yup.string().required('An Id is required').min(1, 'This Id needs to be at least 1 character long'),\n    nickName: yup.string().required('A Nickname is required').min(2, 'This nickname needs to be at least 2 chars long'),\n    species: yup.string().required('A species is required').min(4, 'This species needs to be at least 4 chars long'),\n    h2oFrequency: yup.string().required('An H2o-Frequency is required').min(1, 'This h2oFrequency needs to be at least 1 chars long'),\n});\n\n// Component to create plant\nconst CreatePlant = () => {\n\n    const initialFormValues = {\n        id: '',\n        nickName:'',\n        species: '',\n        h2oFrequency: '',\n        image: '',\n    }\n\n    const initialFormErrors = {\n         id: '', \n         nickName:'', \n         species: '', \n         h2oFrequency: '',\n         image: '',\n    }\n\n    const [value, setValue] = useState(initialFormValues);\n    const [disabled, setDisabled] = useState(true);\n    const [errors, setErrors] = useState(initialFormErrors);\n\n    useEffect(() => {\n        schema.isValid(value).then(valid => setDisabled(!valid))\n      }, [value])\n\n    const onChange = e => {\n        setValue({\n            ...value,\n            [e.target.name] : e.target.value\n            //Need to figure out if the input type of image needs something else here.\n        })\n    }\n\n    return (\n        <div>\n            <header>\n            <h1>Pocket Planters</h1>\n            </header>\n            {/* <p>I should be hidden if not logged in!</p> */}\n            <body>\n            <Cardlist />\n            </body>\n            <footer>\n            <StyledForm> \n                {/* Still need the onSubmit here. */}\n            <label>\n                Nickname:\n                <input\n                    name=\"nickName\"\n                    type=\"text\"\n                    onChange={onChange}\n                    value={value.nickName}\n                    placeholder=\"Nickname\"\n                />\n            </label>\n            <label>\n                Species:\n                <input\n                    name=\"species\"\n                    type=\"text\"\n                    onChange={onChange}\n                    value={value.species}\n                    placeholder=\"Species\"\n                />\n            </label>\n            <label>\n                H2o:\n                <input\n                    name=\"h2oFrequency\"\n                    type=\"text\"\n                    onChange={onChange}\n                    value={value.h2oFrequency}\n                    placeholder=\"H2o-Frequency\"\n                />\n            </label>\n            <label>\n                Id:\n                <input \n                    name=\"id\"\n                    type=\"text\"\n                    onChange={onChange}\n                    value={value.id}\n                    placeholder=\"Id\"\n                />\n            </label>\n            <label>\n                Image:\n                <input \n                    name=\"image\"\n                    type=\"text\"\n                    alt=\"Plant Photo\"\n                    onChange={onChange}\n                    value={value.image}\n                    placeholder=\"Image: optional\"\n                />\n            </label>\n            <button disabled={disabled} className=\"submit-btn\">\n                Add Plant\n            </button>\n                <div>{errors.nickName}</div>\n                <div>{errors.species}</div>\n                <div>{errors.h2oFrequency}</div>\n                <div>{errors.id}</div>\n            </StyledForm>\n            </footer>\n        </div>\n    )\n}\nexport default CreatePlant;\n\nconst StyledForm = styled.form`\n`",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"65","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":21},{"ruleId":"60","severity":1,"message":"66","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"60","severity":1,"message":"65","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":21},{"ruleId":"60","severity":1,"message":"66","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"60","severity":1,"message":"67","line":2,"column":16,"nodeType":"62","messageId":"63","endLine":2,"endColumn":26},{"ruleId":"60","severity":1,"message":"68","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":13},{"ruleId":"60","severity":1,"message":"69","line":36,"column":20,"nodeType":"62","messageId":"63","endLine":36,"endColumn":29},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axiosWithAuth' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","'setErrors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]